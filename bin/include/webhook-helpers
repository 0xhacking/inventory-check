function concat_lines {
    # concat into a single line, and escape double-quotes with sed
    while read line; do
      printf "%s\\\n" "$line"
    done | \
        sed -e 's/"/\\"/g'
}

function tr_notification_to_json_payload {
    sed -E 's/(.*)/{ "text": "\1" }/'
}

function get_last_run_num_from_file {
    local input_file="${1}"
    grep 'Summary:' "${input_file}" | tail -1 | cut -d':' -f3 | awk '{print $1;}'
}

function mk_notification_flat_payload {
    echo "Build Failed!"
    echo "- Build: ${BUILD_URL}"

    local report_file=${1}
    if [ -f "$report_file" ]; then
        print_test_report_summary "$report_file"
        print_test_report_body "$report_file"
    fi
}

function print_test_report_summary {
    local report_file="${1}"
    echo "E2E Test Summary:"
    grep 'overall:' "$report_file" | sed -E 's/(.*)/- \1/'
}

function print_test_report_body {
    local report_file="${1}"
    echo "E2E Test Results:"
    grep '^run-' "$report_file" | grep -v 'overall:' | tr_result_line_to_list_items
}

function tr_result_line_to_list_items {
    while read line; do
        run_num="$(echo "$line" | awk -F'|' '{print $1;}' | cut -d':' -f1)"
        test_id_result=$(echo "$line" | awk -F'|' '{print $2;}' | xargs echo)
        spec_file=$(echo "$line" | awk -F'|' '{print $3;}' | xargs echo)
        spec_file="${spec_file:-"(N/A)"}"
        url=$(echo "$line" | awk -F'|' '{print $4;}' | xargs echo)
        url="${url:-"(N/A)"}"
        echo "-----"
        echo "- test: ${run_num}: $test_id_result"
        echo "- spec file: $spec_file"
        echo "- see: $url"
    done
}
